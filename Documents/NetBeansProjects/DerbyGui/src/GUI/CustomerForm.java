/**
 * This class is the GUI interface for the program
 * This program will persist using a text file the data entered in this GUI
 * 
 * @author     Jerry Cook
 * @created    June 6, 2017
 */

package GUI;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.DefaultListModel;
import Business.Customer;
import Business.DerbyManip;
import Business.Validator;
import java.util.*;
import javax.swing.table.DefaultTableModel;



public class CustomerForm extends javax.swing.JFrame {

    /**
     * Creates new form CustomerForm
     */
    private boolean isUpdate = false;
    public static DerbyManip dm = new DerbyManip();
    String col[] = {"Email Adress","First Name","Last Name"};
    //Creaat DeafaultTableModel, used to display information in the JTable
    public DefaultTableModel tableModel = new DefaultTableModel(col,0){
        //makes the JTable cells uneditable
    public boolean isCellEditable(int row, int column){return false;}};
    //ArrayList to hold information from text file
    public List<Customer> newList;
    //used to validate input into text fields
    public Validator val = new Validator();
    //hold original email address before the update used in database search
    String originalEmail;
    
     
    public CustomerForm() {
       // cDAO = DAOFactory.getCustomerDAO();  //instance of text file manipulation class
        
        initComponents();   
       
        setTableModel();// custom method to refresh the information in the JTable
       
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        UpdateButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        EmailTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        FirstNameTextField = new javax.swing.JTextField();
        LastNameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        OkButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        HelpButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        AboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        UpdateButton.setMnemonic('p');
        UpdateButton.setText("Update");
        UpdateButton.setToolTipText("Update customer information");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 131, 22, 0);
        getContentPane().add(UpdateButton, gridBagConstraints);

        AddButton.setMnemonic('a');
        AddButton.setText("Add");
        AddButton.setToolTipText("Add a new customer");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 97;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 44, 22, 0);
        getContentPane().add(AddButton, gridBagConstraints);

        DeleteButton.setMnemonic('d');
        DeleteButton.setText("Delete");
        DeleteButton.setToolTipText("Remove a customer");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 83;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 9, 22, 0);
        getContentPane().add(DeleteButton, gridBagConstraints);

        ExitButton.setMnemonic('x');
        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 97;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 77, 22, 0);
        getContentPane().add(ExitButton, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Email Address: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 121, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        EmailTextField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 102, 0, 0);
        getContentPane().add(EmailTextField, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("First Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 135, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        FirstNameTextField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 102, 0, 0);
        getContentPane().add(FirstNameTextField, gridBagConstraints);

        LastNameTextField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 102, 0, 0);
        getContentPane().add(LastNameTextField, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Last Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 137, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        OkButton.setMnemonic('o');
        OkButton.setText("OK");
        OkButton.setEnabled(false);
        OkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 47;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(53, 62, 0, 0);
        getContentPane().add(OkButton, gridBagConstraints);

        CancelButton.setMnemonic('c');
        CancelButton.setText("Cancel");
        CancelButton.setEnabled(false);
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(53, 44, 0, 34);
        getContentPane().add(CancelButton, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Cook's Record Keeper");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 148, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Sort by email address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 53, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        HelpButton.setText("Help");
        HelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 93;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 113, 22, 0);
        getContentPane().add(HelpButton, gridBagConstraints);

        CustomerTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Email Address", "First Name", "Last Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CustomerTable.setRowHeight(24);
        jScrollPane1.setViewportView(CustomerTable);
        if (CustomerTable.getColumnModel().getColumnCount() > 0) {
            CustomerTable.getColumnModel().getColumn(0).setResizable(false);
            CustomerTable.getColumnModel().getColumn(1).setResizable(false);
            CustomerTable.getColumnModel().getColumn(2).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1340;
        gridBagConstraints.ipady = 403;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        AboutButton.setText("About");
        AboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 85;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 83, 22, 0);
        getContentPane().add(AboutButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //group to make only one radio button selectable at a time 
    
   //action performed when exit button is clicked
    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
       
        int choice = JOptionPane.showConfirmDialog(this, "Do you really Want to Exit? "
        ," ",JOptionPane.YES_NO_OPTION); //confirmation dialog to confirm exit
          //switch statement to process choice       
        switch (choice) {
            case JOptionPane.YES_OPTION: {
                dm.disconnect();
                System.exit(0);
            }
            case JOptionPane.NO_OPTION: {
                break;
            }
        }
           
        
        
    }//GEN-LAST:event_ExitButtonActionPerformed
      //actions performed when add button clicked
    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        
        //disable unnecassary buttons
        AddButton.setEnabled(false);
        UpdateButton.setEnabled(false);
        DeleteButton.setEnabled(false);
        HelpButton.setEnabled(false);
        ExitButton.setEnabled(false);
        
   
        //enable buttons and fields to enter new customer info
        OkButton.setEnabled(true);
        CancelButton.setEnabled(true);
        EmailTextField.setEnabled(true);
        FirstNameTextField.setEnabled(true);
        LastNameTextField.setEnabled(true);
        
      
       
            
    }//GEN-LAST:event_AddButtonActionPerformed
    //actions performed when update button is pressed
    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        //gets information selected on JTable by user
        int row = CustomerTable.getSelectedRow();
        if (row != -1) { //make sure selection is not empty
           
            //disable unnecassary buttons
            AddButton.setEnabled(false);
            DeleteButton.setEnabled(false);
            HelpButton.setEnabled(false);
            ExitButton.setEnabled(false);
            UpdateButton.setEnabled(false);
            OkButton.setEnabled(true);
            
            
            //enable text fields and buttons required to update information
            CancelButton.setEnabled(true);   
            EmailTextField.setEnabled(true);
            FirstNameTextField.setEnabled(true);
            LastNameTextField.setEnabled(true);
            
            
            //intialize and fill updatArray from textFile
            List<Customer> updateList = dm.getCustomers();
            
            //fil in text fields from the updateArray for the selected index
            Customer c = updateList.get(row);
            originalEmail = c.getEmail();
            EmailTextField.setText(c.getEmail());
            FirstNameTextField.setText(c.getFirstName());
            LastNameTextField.setText(c.getLastName());
            isUpdate = true;
        }
        //if no customer is selected display message dialog
        else
        {
            JOptionPane.showMessageDialog(this,"You must select customer to update");
        }
        
        
    }//GEN-LAST:event_UpdateButtonActionPerformed
     //actions performed if delete button is pressed
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        //initialize deleteArray and fill from text file
        List<Customer> deleteArray = dm.getCustomers();
        //get row selected by user
        int row = CustomerTable.getSelectedRow();
        //check if user selected a row
        if (row != -1) {
            //dailog to confirm delete
            int choice = JOptionPane.showConfirmDialog
                            (this,"Do you really Want to delete? ","",
                                    JOptionPane.YES_NO_OPTION);
            switch (choice)
                    {
            case JOptionPane.YES_OPTION:
            {   
            //delete customer if yes is clicked
           
            Customer c = deleteArray.get(row);
            dm.deleteCustomer(c);
            //refresh JTable
            setTableModel();
            
            break;
            }
            //if no is clicked break switch
            case JOptionPane.NO_OPTION:
            {
                break;
            }
            }
        
        }
        //dialog if no customer selected before delete button pressed
        else
        {
            JOptionPane.showMessageDialog(this,"Must select a customer to delete.");
        }
       
        
    }//GEN-LAST:event_DeleteButtonActionPerformed
   
    //method that fills the JTable
    private void setTableModel()
    {
       
        tableModel.setRowCount(0);//clear the table to be re-filled
        //get customers from text file and fill array
        newList = dm.getCustomers(); 
       
        
             for(Customer c : newList)
             {
                String email = c.getEmail();
                String first = c.getFirstName();
                String last = c.getLastName();
                //place information in an object array
                //data matches the table creations specifications
                Object[] data = {email,first,last};
                //add row to table
                tableModel.addRow(data);
             }
             //set JTable to display all the data added to the table model
             CustomerTable.setModel(tableModel);
        
    }
    //actions performed when cancel button clicked
    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        //clear all the text fields
        EmailTextField.setText("");
        FirstNameTextField.setText("");
        LastNameTextField.setText("");
        
        //disable unnecassary buttons
        EmailTextField.setEnabled(false);
        FirstNameTextField.setEnabled(false);
        LastNameTextField.setEnabled(false);
        CancelButton.setEnabled(false);
        OkButton.setEnabled(false);
        
        //enable buttons 
        AddButton.setEnabled(true);
        UpdateButton.setEnabled(true);
        DeleteButton.setEnabled(true);
        HelpButton.setEnabled(true);
        ExitButton.setEnabled(true);
       
        
    }//GEN-LAST:event_CancelButtonActionPerformed
    //action performed when ok button clicked, available when adding or updating a customer
    private void OkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkButtonActionPerformed
        if(isUpdate == false){
        // grab information from text fields and save in strings
        String email = EmailTextField.getText();
        String firstName = FirstNameTextField.getText();
        String lastName = LastNameTextField.getText();
        if(isValidData()) //validate information from text fields
        {
        //create new customer object
        Customer c = new Customer(email,firstName,lastName);
        dm.addCustomer(c); //write customer object to text file
        setTableModel();//reload the JTable

        
        //enable needed buttons
        AddButton.setEnabled(true);
        UpdateButton.setEnabled(true);
        DeleteButton.setEnabled(true);
        HelpButton.setEnabled(true);
        ExitButton.setEnabled(true);
      
        //disable unecassary buttons
        OkButton.setEnabled(false);
        CancelButton.setEnabled(false);
        EmailTextField.setEnabled(false);
        FirstNameTextField.setEnabled(false);
        LastNameTextField.setEnabled(false);
        //clear the text fields
        EmailTextField.setText("");
        FirstNameTextField.setText("");
        LastNameTextField.setText("");
        }
        }
        if(isUpdate == true){
             String email = EmailTextField.getText();
      String first = FirstNameTextField.getText();
      String last = LastNameTextField.getText();
      if(isValidData())//check that information is valid
      {
          //create new customer object
      Customer c = new Customer(email,first,last);
      //update the customer information
      dm.updateCustomer(c,originalEmail);
       
       setTableModel();//refresh JTable
       
       //enable needed buttons
       UpdateButton.setEnabled(true);
       ExitButton.setEnabled(true);
       AddButton.setEnabled(true);
       DeleteButton.setEnabled(true);
       HelpButton.setEnabled(true);
      
       //disable unneedded buttons

       OkButton.setEnabled(false);
       CancelButton.setEnabled(false);
       FirstNameTextField.setEnabled(false);
       LastNameTextField.setEnabled(false);
       //clear the text fields
       EmailTextField.setText("");
       FirstNameTextField.setText("");
       LastNameTextField.setText("");
       isUpdate = false;
      }
            
        }

    }//GEN-LAST:event_OkButtonActionPerformed

 
  //actions performed when help button clicked
    private void HelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpButtonActionPerformed
        //display dialog with help information
        JOptionPane.showMessageDialog(this,
                "Add - press to enable edit fields to add a customer \n"+
                "Update - Select customer in list then press update to update names information "+
                "\n"
                + "Delete - Select customer in list then press delete to remove customer information"+
                "\nExit - exit the program\n");
                
        
       
    }//GEN-LAST:event_HelpButtonActionPerformed
    //actions performed when about button clicked
    private void AboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutButtonActionPerformed
        // display dialog with program information
        JOptionPane.showMessageDialog(this,"Program by:\n"+" Jerry Cook\n"
            +"July 7, 2017");
    }//GEN-LAST:event_AboutButtonActionPerformed
    //method to verify information entered into text fields is correct format and not empty
    public boolean isValidData()
    {
        return 
                val.isPresent(EmailTextField,"Email Address:")&&
                val.isPresent(FirstNameTextField,"First Name:")&&
                val.isPresent(LastNameTextField,"Last Name:")&&
                val.isEmail(EmailTextField, "Email Address:")&&
                val.isValidEmailLength(EmailTextField,
                        30,"Email Address:")&&
                val.isValidNameLength(FirstNameTextField,15,"First Name:")&&
                val.isValidNameLength(LastNameTextField,15,"Last Name:");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               //creat form in center of screen
               CustomerForm form = new CustomerForm();
               form.setVisible(true);
               form.setLocationRelativeTo(null);
               form.setResizable(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutButton;
    private javax.swing.JButton AddButton;
    private javax.swing.JButton CancelButton;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JButton HelpButton;
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JButton OkButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
